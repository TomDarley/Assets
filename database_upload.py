import psycopg2
conn = psycopg2.connect("host='localhost' port='5432' dbname='swrcmp' user='postgres' password='Plymouth_C0'")

# create a cursor object
# cursor object is used to interact with the database
cur = conn.cursor()
# create a temp dataframe, blank table with just column names. These match exactly the csv created.
cur.execute("""CREATE TABLE temp_defence(
            alert_inspection character varying(255),
            alert_not_able_to_inspect character varying(255),
            alert_transition character varying(255),
            assessed_weighted_condition smallint,
            asset_id integer,
            asset_sub_type character varying(255),
            asset_type character varying(255),
            asset_comments character varying(1353),
            dqi_condition character varying(255),
            date_of_last_assessment_t98 timestamp with time zone,
            description character varying(255),
            element_1_type character varying(255),
            element_1_condition integer DEFAULT 0,
            element_1_material character varying(255),
            element_2_type character varying(255),
            element_2_condition integer DEFAULT 0,
            element_2_material character varying(255),
            element_3_type character varying(255),
            element_3_condition integer DEFAULT 0,
            element_3_material character varying(255),
            element_4_type character varying(255),
            element_4_condition integer DEFAULT 0,
            element_4_material character varying(255),
            element_5_type character varying(255),
            element_5_condition integer DEFAULT 0,
            element_5_material character varying(255),
            element_6_type character varying(255),
            element_6_condition integer DEFAULT 0,
            element_6_material character varying(255),
            element_7_type character varying(255),
            element_7_condition integer DEFAULT 0,
            element_7_material character varying(255),
            element_8_type character varying(255),
            element_8_condition integer DEFAULT 0,
            element_8_material character varying(255),
            element_9_type character varying(255),
            element_9_condition integer DEFAULT 0,
            element_9_material character varying(255),
            element_id character varying(255),
            assessment_frequency_t98 integer DEFAULT 0,
            inspected_condition smallint,
            location character varying(255),
            alert_element_1_not_inspected smallint,
            alert_element_2_not_inspected smallint,
            alert_element_3_not_inspected smallint,
            alert_element_4_not_inspected smallint,
            alert_element_5_not_inspected smallint,
            alert_element_6_not_inspected smallint,
            alert_element_7_not_inspected smallint,
            alert_element_8_not_inspected smallint,
            alert_element_9_not_inspected smallint,
            objectid integer NOT NULL,
            shape geometry,
            swrcmp_id character varying(100),
            source_supplier character varying(255),
            target_condition_last_t98 integer DEFAULT 0,
            element_1_weighting integer DEFAULT 0,
            element_2_weighting integer DEFAULT 0,
            element_3_weighting integer DEFAULT 0,
            element_4_weighting integer DEFAULT 0,
            element_5_weighting integer DEFAULT 0,
            element_6_weighting integer DEFAULT 0,
            element_7_weighting integer DEFAULT 0,
            element_8_weighting integer DEFAULT 0,
            element_9_weighting integer DEFAULT 0,
            date_next_inspection_due timestamp with time zone,
            source_date timestamp with time zone

        )

        """)

# we loop over the csv rows and copy them to the temp table created
with open(r'C:\Users\darle\Documents\Assets_2021\Processing\processed_defences.csv', 'r') as f:
    # Notice that we don't need the `csv` module.
    next(f)  # Skip the header row.
    cur.copy_from(f, 'temp_defence', sep='>')

## migrate updates WHERE temp swrcmp id == swcrmp_defence swrcmp id
cur.execute('''UPDATE swrcmp_defences
                    SET alert_inspection = temp_defence.alert_inspection,
                	alert_not_able_to_inspect = temp_defence.alert_not_able_to_inspect,
                	alert_transition = temp_defence.alert_transition,
                	assessed_weighted_condition = temp_defence.assessed_weighted_condition,
                	asset_id = temp_defence.asset_id,
                	asset_sub_type = temp_defence.asset_sub_type,
                	asset_type = temp_defence.asset_type,
                	asset_comments = temp_defence.asset_comments,
                	dqi_condition = temp_defence.dqi_condition,
                	date_of_last_assessment_t98 = temp_defence.date_of_last_assessment_t98,
                	description = temp_defence.description,
                	element_1_type = temp_defence.element_1_type,
                	element_1_condition = temp_defence.element_1_condition,
                	element_1_material = temp_defence.element_1_material,
                	element_2_type = temp_defence.element_2_type,
                	element_2_condition = temp_defence.element_2_condition,
                	element_2_material = temp_defence.element_2_material,
                	element_3_type = temp_defence.element_3_type,
                	element_3_condition = temp_defence.element_3_condition,
                	element_3_material = temp_defence.element_3_material,
                	element_4_type = temp_defence.element_4_type,
                	element_4_condition = temp_defence.element_4_condition,
                	element_4_material = temp_defence.element_4_material,
                	element_5_type = temp_defence.element_5_type,
                	element_5_condition = temp_defence.element_5_condition,
                	element_5_material = temp_defence.element_5_material,
                	element_6_type = temp_defence.element_6_type,
                	element_6_condition = temp_defence.element_6_condition,
                	element_6_material = temp_defence.element_6_material,
                	element_7_type = temp_defence.element_7_type,
                	element_7_condition = temp_defence.element_7_condition,
                	element_7_material = temp_defence.element_7_material,
                	element_8_type = temp_defence.element_8_type,
                	element_8_condition = temp_defence.element_8_condition,
                	element_8_material = temp_defence.element_8_material,
                	element_9_type = temp_defence.element_9_type,
                	element_9_condition = temp_defence.element_9_condition,
                	element_9_material = temp_defence.element_9_material,
                	element_id = temp_defence.element_id ,
                	assessment_frequency_t98 = temp_defence.assessment_frequency_t98,
                	inspected_condition = temp_defence.inspected_condition ,
                	location = temp_defence.location,
                	alert_element_1_not_inspected = temp_defence.alert_element_1_not_inspected,
                	alert_element_2_not_inspected = temp_defence.alert_element_2_not_inspected,
                	alert_element_3_not_inspected = temp_defence.alert_element_3_not_inspected,
                	alert_element_4_not_inspected = temp_defence.alert_element_4_not_inspected,
                	alert_element_5_not_inspected = temp_defence.alert_element_5_not_inspected,
                	alert_element_6_not_inspected = temp_defence.alert_element_6_not_inspected,
                	alert_element_7_not_inspected = temp_defence.alert_element_7_not_inspected,
                	alert_element_8_not_inspected = temp_defence.alert_element_8_not_inspected,
                	alert_element_9_not_inspected = temp_defence.alert_element_9_not_inspected,
                	objectid = temp_defence.objectid,
                	shape = temp_defence.shape,
                	swrcmp_id = temp_defence.swrcmp_id,
                	source_supplier = temp_defence.source_supplier,
                	target_condition_last_t98 = temp_defence.target_condition_last_t98,
                	element_1_weighting = temp_defence.element_1_weighting,
                	element_2_weighting = temp_defence.element_2_weighting,
                	element_3_weighting = temp_defence.element_3_weighting,
                	element_4_weighting = temp_defence.element_4_weighting,
                	element_5_weighting = temp_defence.element_5_weighting,
                	element_6_weighting = temp_defence.element_6_weighting,
                	element_7_weighting = temp_defence.element_7_weighting,
                	element_8_weighting = temp_defence.element_8_weighting,
                	element_9_weighting = temp_defence.element_9_weighting,
                	date_next_inspection_due = temp_defence.date_next_inspection_due,
                	source_date = temp_defence.source_date     	
                	FROM temp_defence
                	WHERE temp_defence.swrcmp_id = swrcmp_defences.swrcmp_id''')

# Delete the temp_defence_table
cur.execute('''DROP TABLE IF EXISTS temp_defence;''')

conn.commit()

#cur.execute("""CREATE TABLE temp_structures(
#                   alert_inspection character varying(255),
#                   alert_not_able_to_inspect character varying(255),
#                   alert_transition character varying(255),
#                   assessed_weighted_condition smallint,
#                   asset_id integer,
#                   asset_sub_type character varying(255),
#                   asset_type character varying(255),
#                   asset_comments character varying(1353),
#                   dqi_condition character varying(255),
#                   date_of_last_assessment_t98 timestamp with time zone,
#                   description character varying(255),
#                   element_1_type character varying(255),
#                   element_1_condition integer DEFAULT 0,
#                   element_1_material character varying(255),
#                   element_2_type character varying(255),
#                   element_2_condition integer DEFAULT 0,
#                   element_2_material character varying(255),
#                   element_3_type character varying(255),
#                   element_3_condition integer DEFAULT 0,
#                   element_3_material character varying(255),
#                   element_4_type character varying(255),
#                   element_4_condition integer DEFAULT 0,
#                   element_4_material character varying(255),
#                   element_5_type character varying(255),
#                   element_5_condition integer DEFAULT 0,
#                   element_5_material character varying(255),
#                   element_6_type character varying(255),
#                   element_6_condition integer DEFAULT 0,
#                   element_6_material character varying(255),
#                   element_7_type character varying(255),
#                   element_7_condition integer DEFAULT 0,
#                   element_7_material character varying(255),
#                   element_8_type character varying(255),
#                   element_8_condition integer DEFAULT 0,
#                   element_8_material character varying(255),
#                   element_9_type character varying(255),
#                   element_9_condition integer DEFAULT 0,
#                   element_9_material character varying(255),
#                   element_id character varying(255),
#                   assessment_frequency_t98 integer DEFAULT 0,
#                   inspected_condition smallint,
#                   location character varying(255),
#                   alert_element_1_not_inspected smallint,
#                   alert_element_2_not_inspected smallint,
#                   alert_element_3_not_inspected smallint,
#                   alert_element_4_not_inspected smallint,
#                   alert_element_5_not_inspected smallint,
#                   alert_element_6_not_inspected smallint,
#                   alert_element_7_not_inspected smallint,
#                   alert_element_8_not_inspected smallint,
#                   alert_element_9_not_inspected smallint,
#                   objectid integer NOT NULL,
#                   shape geometry,
#                   swrcmp_id character varying(100),
#                   source_supplier character varying(255),
#                   target_condition_last_t98 integer DEFAULT 0,
#                   element_1_weighting integer DEFAULT 0,
#                   element_2_weighting integer DEFAULT 0,
#                   element_3_weighting integer DEFAULT 0,
#                   element_4_weighting integer DEFAULT 0,
#                   element_5_weighting integer DEFAULT 0,
#                   element_6_weighting integer DEFAULT 0,
#                   element_7_weighting integer DEFAULT 0,
#                   element_8_weighting integer DEFAULT 0,
#                   element_9_weighting integer DEFAULT 0,
#                   date_next_inspection_due timestamp with time zone,
#                   source_date timestamp with time zone
#
#               )
#
#               """)
#
## we loop over the csv rows and copy them to the temp table created
#with open(r"C:\Users\darle\Documents\Assets_2021\Processing\processed_structures.csv", 'r') as f:
#    # Notice that we don't need the `csv` module.
#    next(f)  # Skip the header row.
#    cur.copy_from(f, 'temp_structures', sep='>')
#
### migrate updates WHERE temp swrcmp id == swcrmp_defence swrcmp id
#cur.execute('''UPDATE swrcmp_structures
#                   SET alert_inspection = temp_structures.alert_inspection,
#               	alert_not_able_to_inspect = temp_structures.alert_not_able_to_inspect,
#               	alert_transition = temp_structures.alert_transition,
#               	assessed_weighted_condition = temp_structures.assessed_weighted_condition,
#               	asset_id = temp_structures.asset_id,
#               	asset_sub_type = temp_structures.asset_sub_type,
#               	asset_type = temp_structures.asset_type,
#               	asset_comments = temp_structures.asset_comments,
#               	dqi_condition = temp_structures.dqi_condition,
#               	date_of_last_assessment_t98 = temp_structures.date_of_last_assessment_t98,
#               	description = temp_structures.description,
#               	element_1_type = temp_structures.element_1_type,
#               	element_1_condition = temp_structures.element_1_condition,
#               	element_1_material = temp_structures.element_1_material,
#               	element_2_type = temp_structures.element_2_type,
#               	element_2_condition = temp_structures.element_2_condition,
#               	element_2_material = temp_structures.element_2_material,
#               	element_3_type = temp_structures.element_3_type,
#               	element_3_condition = temp_structures.element_3_condition,
#               	element_3_material = temp_structures.element_3_material,
#               	element_4_type = temp_structures.element_4_type,
#               	element_4_condition = temp_structures.element_4_condition,
#               	element_4_material = temp_structures.element_4_material,
#               	element_5_type = temp_structures.element_5_type,
#               	element_5_condition = temp_structures.element_5_condition,
#               	element_5_material = temp_structures.element_5_material,
#               	element_6_type = temp_structures.element_6_type,
#               	element_6_condition = temp_structures.element_6_condition,
#               	element_6_material = temp_structures.element_6_material,
#               	element_7_type = temp_structures.element_7_type,
#               	element_7_condition = temp_structures.element_7_condition,
#               	element_7_material = temp_structures.element_7_material,
#               	element_8_type = temp_structures.element_8_type,
#               	element_8_condition = temp_structures.element_8_condition,
#               	element_8_material = temp_structures.element_8_material,
#               	element_9_type = temp_structures.element_9_type,
#               	element_9_condition = temp_structures.element_9_condition,
#               	element_9_material = temp_structures.element_9_material,
#               	element_id = temp_structures.element_id ,
#               	assessment_frequency_t98 = temp_structures.assessment_frequency_t98,
#               	inspected_condition = temp_structures.inspected_condition ,
#               	location = temp_structures.location,
#               	alert_element_1_not_inspected = temp_structures.alert_element_1_not_inspected,
#               	alert_element_2_not_inspected = temp_structures.alert_element_2_not_inspected,
#               	alert_element_3_not_inspected = temp_structures.alert_element_3_not_inspected,
#               	alert_element_4_not_inspected = temp_structures.alert_element_4_not_inspected,
#               	alert_element_5_not_inspected = temp_structures.alert_element_5_not_inspected,
#               	alert_element_6_not_inspected = temp_structures.alert_element_6_not_inspected,
#               	alert_element_7_not_inspected = temp_structures.alert_element_7_not_inspected,
#               	alert_element_8_not_inspected = temp_structures.alert_element_8_not_inspected,
#               	alert_element_9_not_inspected = temp_structures.alert_element_9_not_inspected,
#               	objectid = temp_structures.objectid,
#               	shape = temp_structures.shape,
#               	swrcmp_id = temp_structures.swrcmp_id,
#               	source_supplier = temp_structures.source_supplier,
#               	target_condition_last_t98 = temp_structures.target_condition_last_t98,
#               	element_1_weighting = temp_structures.element_1_weighting,
#               	element_2_weighting = temp_structures.element_2_weighting,
#               	element_3_weighting = temp_structures.element_3_weighting,
#               	element_4_weighting = temp_structures.element_4_weighting,
#               	element_5_weighting = temp_structures.element_5_weighting,
#               	element_6_weighting = temp_structures.element_6_weighting,
#               	element_7_weighting = temp_structures.element_7_weighting,
#               	element_8_weighting = temp_structures.element_8_weighting,
#               	element_9_weighting = temp_structures.element_9_weighting,
#               	date_next_inspection_due = temp_structures.date_next_inspection_due,
#               	source_date = temp_structures.source_date
#               	FROM temp_structures
#               	WHERE temp_structures.swrcmp_id = swrcmp_structures.swrcmp_id''')
## Delete the temp_defence_table
#cur.execute('''DROP TABLE IF EXISTS temp_structures''')
#conn.commit()